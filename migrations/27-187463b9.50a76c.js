
module.exports.id = '27.187463b9.50a76c';

const _ = require('lodash'),
  config = require('../config');

/**
 * @description flow 187463b9.50a76c update
 * @param done
 */
   

module.exports.up = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.update({"path":"187463b9.50a76c","type":"flows"}, {
    $set: {"path":"187463b9.50a76c","body":[{"id":"79640639.9f6918","type":"amqp in","z":"187463b9.50a76c","name":"event input","topic":"app_eth_chrono_sc.walletcreated","iotype":"3","ioname":"events","noack":"0","durablequeue":"0","durableexchange":"0","server":"4d3746a2.c73cd8","servermode":"0","x":96.07638549804688,"y":185.65624618530273,"wires":[["22812a80.b669b6"]]},{"id":"def6fd01.5b8cc","type":"mongo","z":"187463b9.50a76c","model":"","request":"{}","options":"{}","name":"mongo","mode":"1","requestType":"1","dbAlias":"primary.data","x":523.0799102783203,"y":186.6528491973877,"wires":[["de8643d2.8f6ac"]]},{"id":"22812a80.b669b6","type":"function","z":"187463b9.50a76c","name":"prepare exchange","func":"const prefix = global.get('settings.mongo.collectionPrefix');\nconst speakeasy = global.get('libs.speakeasy');\n\nmsg.payload = JSON.parse(msg.payload).payload;\n\nconst secret = speakeasy.generateSecret({length: 20});\n\n\nmsg.payload = {\n    model: `${prefix}WalletExchange`, \n    request: {\n       address: msg.payload.wallet,\n       owner: msg.payload.by,\n       secret: secret.base32\n       }\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":325.0694580078125,"y":185.56945037841797,"wires":[["def6fd01.5b8cc"]]},{"id":"f3bc0ec7.14473","type":"debug","z":"187463b9.50a76c","name":"","active":true,"console":"false","complete":"false","x":830,"y":400,"wires":[]},{"id":"99dca3ee.f1bbb","type":"amqp in","z":"187463b9.50a76c","name":"event input","topic":"app_eth_chrono_sc.multisigwalletconfirmationneeded","iotype":"3","ioname":"events","noack":"0","durablequeue":"0","durableexchange":"0","server":"4d3746a2.c73cd8","servermode":"0","x":96,"y":281,"wires":[["96125f96.c927e"]]},{"id":"e82a0c7d.79d69","type":"mongo","z":"187463b9.50a76c","model":"","request":"{}","options":"{}","name":"mongo","mode":"1","requestType":"2","dbAlias":"primary.data","x":523.0035247802734,"y":281.99660301208496,"wires":[["de8643d2.8f6ac"]]},{"id":"96125f96.c927e","type":"function","z":"187463b9.50a76c","name":"add operation","func":"const prefix = global.get('settings.mongo.collectionPrefix');\n\nmsg.payload = JSON.parse(msg.payload).payload;\n\n\nmsg.payload = {\n    model: `${prefix}WalletExchange`, \n    request: [{\n       address: msg.payload.to,\n       owner: msg.payload.initiator,\n       }, {$push: {operations: msg.payload.operation}}]\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":314.9930725097656,"y":280.91320419311523,"wires":[["e82a0c7d.79d69"]]},{"id":"fe5116e.21303e8","type":"amqp in","z":"187463b9.50a76c","name":"event input","topic":"app_eth_chrono_sc.multisigwalletconfirmation","iotype":"3","ioname":"events","noack":"0","durablequeue":"0","durableexchange":"0","server":"4d3746a2.c73cd8","servermode":"0","x":96,"y":361,"wires":[["70396f13.d2416","f3bc0ec7.14473"]]},{"id":"f39649e0.fc3a78","type":"mongo","z":"187463b9.50a76c","model":"","request":"{}","options":"{}","name":"mongo","mode":"1","requestType":"2","dbAlias":"primary.data","x":523.0035247802734,"y":361.99660301208496,"wires":[["de8643d2.8f6ac"]]},{"id":"70396f13.d2416","type":"function","z":"187463b9.50a76c","name":"remove operation","func":"const prefix = global.get('settings.mongo.collectionPrefix');\n\nmsg.payload = JSON.parse(msg.payload).payload;\n\n\nmsg.payload = {\n    model: `${prefix}WalletExchange`, \n    request: [{\n       address: msg.payload.self,\n       owner: msg.payload.owner,\n       }, {$pull: {operations: msg.payload.operation}}]\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":324.9930725097656,"y":360.91320419311523,"wires":[["f39649e0.fc3a78"]]},{"id":"de8643d2.8f6ac","type":"function","z":"187463b9.50a76c","name":"ack message","func":"if(msg.amqpMessage)\n    msg.amqpMessage.ackMsg();\n\n\nreturn msg;","outputs":1,"noerr":0,"x":738.0764312744141,"y":282.2291946411133,"wires":[[]]},{"id":"58b388bb.ccb698","type":"catch","z":"187463b9.50a76c","name":"","scope":null,"x":100,"y":500,"wires":[["cbc68299.d89f4","9057ae49.0f407"]]},{"id":"9057ae49.0f407","type":"function","z":"187463b9.50a76c","name":"nack message","func":"if(msg.amqpMessage)\n    msg.amqpMessage.nackMsg();\n\n\nreturn msg;","outputs":1,"noerr":0,"x":320,"y":500,"wires":[[]]},{"id":"cbc68299.d89f4","type":"debug","z":"187463b9.50a76c","name":"","active":true,"console":"false","complete":"error","x":261.06944274902344,"y":583.5694961547852,"wires":[]}]}
  }, {upsert: true}, done);
};

module.exports.down = function (done) {
  let coll = this.db.collection(`${_.get(config, 'nodered.mongo.collectionPrefix', '')}noderedstorages`);
  coll.remove({"path":"187463b9.50a76c","type":"flows"}, done);
};
